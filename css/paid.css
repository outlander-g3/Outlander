h2 {
  text-align: center;
  padding-top: 20px;
  font-size: 20px;
  font-weight: bold; }

.pdPaid {
  width: 335px;
  margin: 20px auto;
  border: 1px solid #95989a;
  border-radius: 4px; }
  @media only screen and (max-width: 767px) {
    .pdPaid {
      border-color: rgba(149, 152, 154, 0.7); } }
  .pdPaid p {
    padding: 20px 50px; }
  .pdPaid a {
    color: #95d0d9; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFpZC5jc3MiLCJzb3VyY2VzIjpbInBhaWQuc2NzcyIsImJhc2UvX3Zhci5zY3NzIiwibWl4aW4vX21peGluLnNjc3MiLCJtaXhpbi9fbWl4aW4tY2FydC5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJiYXNlL192YXIuc2Nzc1wiO1xuQGltcG9ydCBcIm1peGluL19taXhpbi5zY3NzXCI7XG5AaW1wb3J0IFwibWl4aW4vX21peGluLWNhcnQuc2Nzc1wiO1xuXG5oMntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgQGluY2x1ZGUgcFRvcCgyMCk7XG4gICAgQGluY2x1ZGUgZjIwYigpO1xufVxuLnBkUGFpZHtcbiAgICAvLyB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLy8gd2lkdGg6IDUwJTtcbiAgICB3aWR0aDogMzM1cHg7XG4gICAgbWFyZ2luOjIwcHggYXV0bztcbiAgICBAaW5jbHVkZSBjdEJvcmRlcigpO1xuICAgIEBpbmNsdWRlIGJyNCgpO1xuICAgIHB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHggNTBweDtcbiAgICB9XG4gICAgYXtcbiAgICAgICAgY29sb3I6ICRjb2xvci1idG4tc3ViO1xuICAgIH1cbn1cbi8vIEBpbmNsdWRlIG87IiwiLy8g6Imy56Wo5YCRXG4kY29sb3ItdGV4dDojNDg0ODQ4Oy8v5YWn5paHXG4kY29sb3ItbWFpbi15ZWxsb3c6I2Q4ZGQ3NjsvL2xvZ2/pu4NcbiRjb2xvci1tYWluLWJsdWU6IzMyNTQ1YzsvL2xvZ2/mt7Hol41cbiRjb2xvci1zdWJUaXRsZTojMGQ2MTcyOy8v5bCP5qiZ6aGMXG4kY29sb3ItYnRuLW1haW46IzVkYjdjNTsvL+S4u+aMiemIleiJslxuJGNvbG9yLWJ0bi1zdWI6Izk1ZDBkOTsvL+asoeaMiemIleiJslxuLy/kuLvmjInpiJVcbiRidG4tbWFpbi1zOlwiYnRuLW1haW4tc1wiO1xuJGJ0bi1tYWluLWw6XCJidG4tbWFpbi1sXCI7IFxuLy/mrKHmjInpiJVcblxuJGJ0bi1zdWItczpcImJ0bi1zdWItc1wiO1xuJGJ0bi1zdWItbDpcImJ0bi1zdWItbFwiOyBcblxuLy/pmbDlvbEgdGV4dOi3n2JveOeahOmDveS4gOaoo1xuJHNoYWRvdzowIDNweCA2cHggcmdiYSgwLDAsMCwwLjE2KTtcblxuLy/lnJPop5JcbiRib3JkZXItcmFkaXVzLWJ0bjoyMXB4OyIsIlxuLy/mloflrZdcbkBtaXhpbiBmMTQge1xuICAgIGZvbnQtc2l6ZToxNHB4O1xufVxuQG1peGluIGYxNiB7XG4gICAgZm9udC1zaXplOjE2cHg7XG59XG5AbWl4aW4gZjIwIHtcbiAgICBmb250LXNpemU6MjBweDtcbn1cbkBtaXhpbiBmMzAge1xuICAgIGZvbnQtc2l6ZTozMHB4O1xufVxuQG1peGluIGY0MCB7XG4gICAgZm9udC1zaXplOjQwcHg7XG59XG4vL+aWh+Wtl+eyl+mrlFxuQG1peGluIGYxNmIge1xuICAgIGZvbnQtc2l6ZToxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuQG1peGluIGYyMGIge1xuICAgIGZvbnQtc2l6ZToyMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuQG1peGluIGYzMGIge1xuICAgIGZvbnQtc2l6ZTozMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vL+WAi+WIpeeahHBhZGRpbmcgIOimgeS4i+WwsWluY2x1ZGUgcFRvcCgxMDAp5bCx5pivMTAwcHhcbkBtaXhpbiBwVG9wKCRwYWRkaW5nVG9wKXtcbiAgICBwYWRkaW5nLXRvcDogJHBhZGRpbmdUb3AgKyBweDtcbn1cbkBtaXhpbiBwQm90dG9tKCRwYWRkaW5nQm90dG9tKXtcbiAgICBwYWRkaW5nLWJvdHRvbTogJHBhZGRpbmdCb3R0b20gKyBweDtcbn1cbkBtaXhpbiBwTGVmdCgkcGFkZGluZ0xlZnQpe1xuICAgIHBhZGRpbmctTGVmdDogJHBhZGRpbmdMZWZ0ICsgcHg7XG59XG5AbWl4aW4gcFJpZ2h0KCRwYWRkaW5nUmlnaHQpe1xuICAgIHBhZGRpbmctUmlnaHQ6ICRwYWRkaW5nUmlnaHQgKyBweDtcbn1cblxuLy/lgIvliKXnmoRtYXJnaW4gIOimgeS4i+WwsWluY2x1ZGUgbVRvcCgxMDAp5bCx5pivMTAwcHhcbkBtaXhpbiBtVG9wKCRtYXJnaW5Ub3Ape1xuICAgIG1hcmdpbi10b3A6ICRtYXJnaW5Ub3AgKyBweDtcbn1cbkBtaXhpbiBtQm90dG9tKCRtYXJnaW5Cb3R0b20pe1xuICAgIG1hcmdpbi1ib3R0b206ICRtYXJnaW5Cb3R0b20gKyBweDtcbn1cbkBtaXhpbiBtTGVmdCgkbWFyZ2luTGVmdCl7XG4gICAgbWFyZ2luLUxlZnQ6ICRtYXJnaW5MZWZ0ICsgcHg7XG59XG5AbWl4aW4gbVJpZ2h0KCRtYXJnaW5SaWdodCl7XG4gICAgbWFyZ2luLVJpZ2h0OiAkbWFyZ2luUmlnaHQgKyBweDtcbn1cblxuXG5cbi8v5Y2A5aGKXG5AbWl4aW4gYmxvY2sge1xuICAgIHBhZGRpbmc6NTBweCAyMHB4O1xufVxuXG4vL+WNoeeJh+eahOWck+inklxuQG1peGluIGJyNHtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG4vL+aMiemIleeahOimj+evhFxuQG1peGluIGJ0biB7XG4gICAgaGVpZ2h0OiA0MnB4O1xuICAgIGJvcmRlci1yYWRpdXM6JGJvcmRlci1yYWRpdXMtYnRuO1xuICAgIGNvbG9yOiNmZmY7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBsaW5lLWhlaWdodDogNDJweDtcbiAgICBib3JkZXI6bm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5AbWl4aW4gYnRuLXN7XG4gICAgd2lkdGg6IDEzMHB4O1xufVxuQG1peGluIGJ0bi1sIHtcbiAgICB3aWR0aDogMTYycHg7XG59XG5cbi8v5qC857eaXG5AbWl4aW4gZ3JpZCgkbnVtKSB7XG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbnVte1xuICAgICAgICAuY29sLSN7JGl9LFxuICAgICAgICAuY29sLW1kLSN7JGl9LFxuICAgICAgICAuY29sLWxnLSN7JGl9LFxuICAgICAgICAuY29sLXhsLSN7JGl9e1xuICAgICAgICAgICAgd2lkdGg6ICgxMDAlLyRudW0pICogJGk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtaXhpbiBjdFRleHRCbG9jaygpe1xuICAgIEBpbmNsdWRlIHJ3ZChtZWRpdW0pe1xuICAgICAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgfVxufSIsIkBtaXhpbiBvIHtcbiAgICAqe1xuICAgICAgICBvdXRsaW5lOiAxcHggc29saWQgcmVkO1xuICAgIH1cbn1cblxuJGNvbG9yLWJvcmRlcjpyZ2IoMTQ5LCAxNTIsIDE1NCk7XG4kY3RCb3JkZXI6MXB4IHNvbGlkICRjb2xvci1ib3JkZXI7XG5AbWl4aW4gY3RCb3JkZXJ7XG4gICAgYm9yZGVyOiRjdEJvcmRlcjtcbiAgICBAaW5jbHVkZSByd2QobW9iaWxlKXtcbiAgICAgICAgYm9yZGVyLWNvbG9yOnJnYmEoMTQ5LCAxNTIsIDE1NCwwLjcpO1xuICAgIH1cbn1cblxuJG1vYmlsZTogNzY3cHg7XG4kbWVkaXVtOiA5OTFweDtcbiRkZXNrdG9wOiAxMjAwcHg7XG5AbWl4aW4gcndkKCRicmVha3BvaW50KSB7XG4gICAgQGlmICRicmVha3BvaW50PT1tb2JpbGUgICB7XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogJG1vYmlsZSkge1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAZWxzZSBpZiAkYnJlYWtwb2ludD09bWVkaXVtIHtcbiAgICAgICAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogJG1lZGl1bSl7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBlbHNlIGlmICRicmVha3BvaW50PT1kZXNrdG9wIHtcbiAgICAgICAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogJGRlc2t0b3Ape1xuICAgICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4vL+e1puioguizvOS6uuWSjOaXheWuouizh+ioiueUqFxuQG1peGluIGN0Qm94IHtcbiAgICBcbiAgICBwYWRkaW5nOiAzMHB4IDIwcHg7XG4gICAgQGluY2x1ZGUgY3RCb3JkZXIoKTtcbiAgICBwe1xuICAgICAgICAvLyBAaW5jbHVkZSBwTGVmdCgyMCk7XG4gICAgICAgIEBpbmNsdWRlIGYxNigpO1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgLy8gd2lkdGg6IDMwMHB4O1xuICAgICAgICBzcGFue1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgIGlucHV0e1xuICAgICAgICAgICAgd2lkdGg6IDE4MHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgYnI0KCk7XG4gICAgICAgICAgICBAaW5jbHVkZSByd2QobWVkaXVtKXtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKXtcbiAgICAgICAgICAgIEBpbmNsdWRlIHBUb3AoMzApO1xuICAgICAgICB9XG4gICAgfVxufVxuLy/ntaZ0YWLnmoRCUlxuQG1peGluIGN0QlJfX3RhYntcbiAgICAmOmZpcnN0LWNoaWxke1xuICAgICAgICBAaW5jbHVkZSBjdEJvcmRlcigpO1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHggMCAwIDA7XG4gICAgfVxuICAgICY6Zmlyc3QtY2hpbGR+YXtcbiAgICAgICAgYm9yZGVyLXRvcDoxcHggc29saWQgJGNvbG9yLWJvcmRlcjtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OjFweCBzb2xpZCAkY29sb3ItYm9yZGVyO1xuICAgIH1cbiAgICAmOmxhc3QtY2hpbGR7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAgNHB4IDAgMDtcbiAgICB9XG5cbn1cblxuQG1peGluIHJ3ZFdyYXB7XG4gICAgQGluY2x1ZGUgcndkKG1vYmlsZSl7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxBQUFBLEVBQUUsQ0FBQTtFQUNFLFVBQVUsRUFBRSxNQUFNO0VFNEJsQixXQUFXLEVBQUUsSUFBZ0I7RUFWN0IsU0FBUyxFQUFDLElBQUk7RUFDZCxXQUFXLEVBQUUsSUFBSSxHRmhCcEI7O0FBQ0QsQUFBQSxPQUFPLENBQUE7RUFHSCxLQUFLLEVBQUUsS0FBSztFQUNaLE1BQU0sRUFBQyxTQUFTO0VHSmhCLE1BQU0sRUFGQSxHQUFHLENBQUMsS0FBSyxDQURMLE9BQWtCO0VEOEQ1QixhQUFhLEVBQUUsR0FBRyxHRjlDckI7RUdGTyxNQUFNLE1BQU0sTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0lIWGhELEFBQUEsT0FBTyxDQUFBO01HRUMsWUFBWSxFQUFDLHdCQUF1QixHSFczQztFQWJELEFBT0ksT0FQRyxDQU9ILENBQUMsQ0FBQTtJQUNHLE9BQU8sRUFBRSxTQUFTLEdBQ3JCO0VBVEwsQUFVSSxPQVZHLENBVUgsQ0FBQyxDQUFBO0lBQ0csS0FBSyxFQ2RFLE9BQU8sR0RlakIifQ== */
