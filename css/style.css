@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  font-family: 'Microsoft JhengHei',"微軟正黑體"; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

select {
  text-shadow: none;
  outline: none; }

input, button {
  outline: none; }

* {
  font-family: "微軟正黑體"; }

a {
  text-decoration: none; }

.row {
  display: flex; }

.col-1,
.col-md-1,
.col-lg-1,
.col-xl-1 {
  width: 8.33333%; }

.col-2,
.col-md-2,
.col-lg-2,
.col-xl-2 {
  width: 16.66667%; }

.col-3,
.col-md-3,
.col-lg-3,
.col-xl-3 {
  width: 25%; }

.col-4,
.col-md-4,
.col-lg-4,
.col-xl-4 {
  width: 33.33333%; }

.col-5,
.col-md-5,
.col-lg-5,
.col-xl-5 {
  width: 41.66667%; }

.col-6,
.col-md-6,
.col-lg-6,
.col-xl-6 {
  width: 50%; }

.col-7,
.col-md-7,
.col-lg-7,
.col-xl-7 {
  width: 58.33333%; }

.col-8,
.col-md-8,
.col-lg-8,
.col-xl-8 {
  width: 66.66667%; }

.col-9,
.col-md-9,
.col-lg-9,
.col-xl-9 {
  width: 75%; }

.col-10,
.col-md-10,
.col-lg-10,
.col-xl-10 {
  width: 83.33333%; }

.col-11,
.col-md-11,
.col-lg-11,
.col-xl-11 {
  width: 91.66667%; }

.col-12,
.col-md-12,
.col-lg-12,
.col-xl-12 {
  width: 100%; }

.btn-jump-left {
  background-color: #F99D19;
  border: 2px solid #F99D19;
  width: 116px;
  border-radius: 60px;
  color: #fff;
  display: inline-block;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  line-height: 38px;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  outline: none;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16); }
  .btn-jump-left:hover {
    filter: brightness(120%); }

.btn-jump-right {
  background-color: #F27F22;
  border: 2px solid #F27F22;
  width: 116px;
  border-radius: 60px;
  color: #fff;
  display: inline-block;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  line-height: 38px;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  outline: none;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16); }
  .btn-jump-right:hover {
    filter: brightness(120%); }

.btn-main-s {
  background-color: #F27F22;
  border: 2px solid #F27F22;
  border-radius: 60px;
  color: #fff;
  display: inline-block;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  line-height: 38px;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  outline: none;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  width: 142px; }
  .btn-main-s:hover {
    filter: brightness(120%); }

.btn-main-l {
  background-color: #F27F22;
  border: 2px solid #F27F22;
  border-radius: 60px;
  color: #fff;
  display: inline-block;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  line-height: 38px;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  outline: none;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  width: 160px; }
  .btn-main-l:hover {
    filter: brightness(120%); }

.btn-sub-s {
  background-color: #F99D19;
  border: 2px solid #F99D19;
  border-radius: 60px;
  color: #fff;
  display: inline-block;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  line-height: 38px;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  outline: none;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  width: 142px; }
  .btn-sub-s:hover {
    filter: brightness(120%); }

.btn-sub-l {
  background-color: #F99D19;
  border: 2px solid #F99D19;
  border-radius: 60px;
  color: #fff;
  display: inline-block;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  line-height: 38px;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  outline: none;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  width: 160px; }
  .btn-sub-l:hover {
    filter: brightness(120%); }

.shadow-text {
  text-shadow: 0 3px 6px rgba(0, 0, 0, 0.16); }

.shadow-box {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16); }

input[type='text'],
input[type='date'] {
  border: 1px solid #DDDDDD;
  background-color: #F4F4F4;
  padding-Left: 10px;
  border-radius: 4px; }
  input[type='text']::placeholder,
  input[type='date']::placeholder {
    color: #484848;
    font-size: 16px; }
  input[type='text']:hover,
  input[type='date']:hover {
    border-color: #989898; }

.winJump {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 350px;
  box-sizing: border-box;
  background-color: #5DB7C5;
  color: #F4F4F4;
  display: none; }
  .winJump .jpTitle {
    padding: 12px 15px;
    font-size: 16px;
    color: #F4F4F4;
    background-image: url(../img/winJump.png);
    background-size: cover; }
  .winJump .jpCont {
    padding: 50px 50px 0px 50px;
    line-height: 26px; }
  .winJump .jpBtn > .row {
    justify-content: space-between;
    padding: 39px 38px 38px 50px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
